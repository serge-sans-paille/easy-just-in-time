import lit.formats
import lit.util
import os

config.name = 'easy_jit'
config.suffixes = ['.c', '.cpp', '.ll', '.test']

config.test_format = lit.formats.ShTest(True)

config.test_source_root = "@CMAKE_CURRENT_SOURCE_DIR@/tests"
config.test_exec_root = "@CMAKE_CURRENT_BINARY_DIR@/tests"

config.environment['PATH'] = os.pathsep.join(["@LLVM_TOOLS_BINARY_DIR@"] + [ config.environment['PATH'] ])

runtime_lib = os.path.basename("@EASY_JIT_RUNTIME@").split('.')[0].replace("lib", "", 1)
runtime_lib_dir = os.path.dirname("@EASY_JIT_RUNTIME@")
llvm_lib_dir = os.path.join(os.path.dirname("@LLVM_TOOLS_BINARY_DIR@"), "lib")

includes = ["cpplib", "runtime"]
include_flags = " ".join(["-I'" + os.path.abspath(dir) + "'" for dir in "@LLVM_INCLUDE_DIRS@".split()] + ["-I'" + os.path.join("@EASY_JIT_ROOT@", dir, "include") + "'" for dir in includes] )

ld_paths = [runtime_lib_dir, llvm_lib_dir]
ld_flags = ""
for ld_path in ld_paths:
  ld_flags = ld_flags + " -L'" + os.path.abspath(ld_path) + "' -rpath '" + os.path.abspath(ld_path) + "' "

ld_flags = ld_flags + " -l" + runtime_lib



# substitutions
config.substitutions.append(('%clangxx', os.path.join("@LLVM_TOOLS_BINARY_DIR@", "clang++")))
config.substitutions.append(('%clang', os.path.join("@LLVM_TOOLS_BINARY_DIR@", "clang")))
config.substitutions.append(('%opt', os.path.join("@LLVM_TOOLS_BINARY_DIR@", "opt")))
config.substitutions.append(('%cxxflags', "--std=c++14 -Xclang -disable-O0-optnone"))
config.substitutions.append(('%include_flags', include_flags))
config.substitutions.append(('%lib_pass', "@EASY_JIT_PASS@"))
config.substitutions.append(('%lib_runtime', "@EASY_JIT_RUNTIME@"))
config.substitutions.append(('%ld_flags', ld_flags))

config.substitutions.append(('%FileCheck', os.path.join("@LLVM_TOOLS_BINARY_DIR@", "FileCheck")))
